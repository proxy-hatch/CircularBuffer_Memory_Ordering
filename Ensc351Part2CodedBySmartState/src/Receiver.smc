9999 4 1
6
BEGIN DATA
BEGIN GenericState 118
118 10
7 3 115 82
1
Receiver_TopLevel
0 65535 0
82
TEXTBEGIN
ctx.NCGbyte = ctx.Crcflg ? 'C' : NAK; 
ctx.sendByte(ctx.NCGbyte); 
ctx.errCnt=0;
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 101
101 10
17 35 34 48
1
FirstByte
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 103
103 10
60 35 77 48
1
EOT
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN FinalState 109
109 10
118 75 122 79
1
FinalState
BEGIN Mesg 111
111 20
34 32 60 41
1
1 1 16777215 65280
108
SER
c == EOT
18
TEXTBEGIN
ctx.sendByte(NAK);
TEXTEND
BEGIN Mesg 113
113 20
78 30 107 43
1
1 1 16777215 65280
110
SER
c==EOT
38
TEXTBEGIN
ctx.sendByte(ACK);
ctx.result="Done";
TEXTEND
BEGIN InitialState 123
123 10
10 39 14 43
1
InitialState
BEGIN Transition 124
124 40
36 32 36 40
123 101
2 1 4 2
2 14 41 15 41 
1 15 41 16 41 
3 16 41 17 41 
BEGIN Transition 108
108 40
42 45 42 53
101 103
2 2 4 2
2 34 41 35 41 
1 35 41 59 41 
3 59 41 60 41 
BEGIN Transition 130
130 40
19 35 19 43
101 129
3 1 1 3
2 29 48 29 49 
0 29 49 29 67 
3 29 67 29 68 
BEGIN Transition 141
141 40
26 58 26 66
118 109
3 3 3 1
2 34 82 34 83 
0 34 83 34 86 
1 34 86 120 86 
0 120 86 120 80 
3 120 80 120 79 
BEGIN Transition 133
133 40
30 51 30 59
129 109
2 3 4 1
2 36 77 37 77 
1 37 77 117 77 
3 117 77 118 77 
BEGIN Transition 136
136 40
15 47 15 55
129 101
2 1 2 3
2 36 71 37 71 
1 37 71 39 71 
0 39 71 39 44 
1 39 44 35 44 
3 35 44 34 44 
BEGIN Transition 146
146 40
55 23 55 31
144 109
2 2 2 1
2 59 24 60 24 
1 60 24 126 24 
0 126 24 126 77 
1 126 77 123 77 
3 123 77 122 77 
BEGIN Transition 110
110 40
58 57 58 65
103 109
2 2 1 1
2 77 41 78 41 
1 78 41 120 41 
0 120 41 120 74 
3 120 74 120 75 
BEGIN Transition 145
145 40
29 39 29 47
101 144
1 3 4 1
2 29 35 29 34 
0 29 34 29 27 
1 29 27 41 27 
3 41 27 42 27 
BEGIN GenericState 129
129 10
10 68 36 80
1
ConditionalTransient
0 12632256 0
15
TEXTBEGIN
POST("*",CONT);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 131
131 20
7 49 31 67
1
1 1 16777215 65280
130
SER
c==SOH
79
TEXTBEGIN
ctx.getRestBlk();
if (ctx.goodBlk1st) 
     ctx.errCnt=0;
else ctx.errCnt++;
TEXTEND
BEGIN Mesg 134
134 20
71 57 162 77
1
1 1 16777215 65280
133
CONT
ctx.syncLoss || ctx.errCnt >= errB
113
TEXTBEGIN
ctx.can8();
if (ctx.syncLoss)
     ctx.result="LossOfSyncronization";
else
     ctx.result="ExcessiveErrors";
TEXTEND
BEGIN Mesg 137
137 20
39 46 83 74
1
1 1 16777215 65280
136
CONT
!ctx.syncLoss && (ctx.errCnt < errB)
110
TEXTBEGIN
if (ctx.goodBlk)  ctx.sendByte(ACK);
else  ctx.sendByte(NAK);
if (ctx.goodBlk1st) 
     ctx.writeChunk();

TEXTEND
BEGIN Note 138
138 50
116 3 158 20
1
0 0 8454143 128
180
TEXTBEGIN
Simplified Receiver Statechart
No dropped  characters, 
     no timeouts, 
     no cancellation via keyboard.
Copyright 2017 Craig Scratchley
craig_scratchley AT alumni.sfu.ca
TEXTEND
BEGIN Mesg 142
142 20
6 84 107 97
1
1 1 16777215 65280
141
SER

108
TEXTBEGIN
cerr << "Receiver received totally unexpected char #" << c << ": " << (char) c << endl;
exit(EXIT_FAILURE);
TEXTEND
BEGIN GenericState 144
144 10
42 18 59 31
1
CAN
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 147
147 20
26 20 47 32
1
1 1 16777215 65280
145
SER
c == CAN
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 148
148 20
59 12 92 29
1
1 1 16777215 65280
146
SER
c == CAN
47
TEXTBEGIN
ctx.result="SndCancelled";
/*ctx.clearCan();*/
TEXTEND
BEGIN Note 149
149 50
130 47 158 84
1
0 0 8454143 128
180
TEXTBEGIN
The entry code:

POST("*",CONT);

in the ConditionalTransient transient state immediately posts a continue (CONT) event that immediately kicks the StateChart out of that state.
TEXTEND
END DATA
Receiver
ReceiverX
ReceiverX.h

42
INCLUDE BEGIN
#include <iostream>
#include <stdlib.h>

INCLUDE END
20
DECL BEGIN
#define c wParam


DECL END
W. Craig Scratchley
77
DESC BEGIN
 Simple XMODEM Receiver

Copyright (C) 2017 Craig Scratchley
wcs AT sfu.ca
DESC END
0
INCLUDE BEGIN

INCLUDE END
0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
